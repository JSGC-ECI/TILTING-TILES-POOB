#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ This\ class\ will\ represent\ the\ puzzle\ that\ contains\ the\ tiles\r\n\r\n\ @author\ Lina\ y\ Sebbastian\r\n\ @version\ 1.0\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Constructor\ 1.\ Create\ a\ puzzle\ of\ size\ h\ x\ w\r\n
comment10.params=row\ column
comment10.target=int\ gluedGroupRight(int,\ int)
comment10.text=\r\n\ Calculates\ the\ number\ of\ consecutive\ tiles\ to\ the\ right\ of\ a\ specified\ position\ in\ the\ puzzle\ that\ are\ glued\ together.\r\n\r\n\ @param\ row\ \ \ \ The\ row\ index\ of\ the\ starting\ tile.\r\n\ @param\ column\ The\ column\ index\ of\ the\ starting\ tile.\r\n\ @return\ \ \ \ \ The\ number\ of\ consecutive\ glued\ tiles\ to\ the\ right\ of\ the\ specified\ tile.\r\n
comment11.params=row\ column
comment11.target=boolean\ groupCanMoveUp(int,\ int)
comment11.text=\r\n\ Checks\ if\ a\ group\ of\ glued\ tiles\ at\ the\ given\ position\ can\ move\ upwards\r\n\r\n\ @param\ row\ \ \ \ The\ row\ index\ of\ the\ starting\ tile.\r\n\ @param\ column\ The\ column\ index\ of\ the\ starting\ tile\r\n\ @return\ \ \ \ \ true\ if\ the\ group\ of\ glued\ tiles\ can\ move\ upwards,\ false\ otherwise\r\n
comment12.params=row\ column
comment12.target=int\ gluedGroupDown(int,\ int)
comment12.text=\r\n\ Calculates\ the\ number\ of\ consecutive\ tiles\ to\ the\ down\ of\ a\ specified\ position\ in\ the\ puzzle\ that\ are\ glued\ together.\r\n\r\n\ @param\ row\ \ \ \ The\ row\ index\ of\ the\ starting\ tile.\r\n\ @param\ column\ The\ column\ index\ of\ the\ starting\ tile.\r\n\ @return\ \ \ \ \ The\ number\ of\ consecutive\ glued\ tiles\ to\ the\ down\ of\ the\ specified\ tile.\r\n
comment13.params=row\ column
comment13.target=int\ gluedGroupUp(int,\ int)
comment13.text=\r\n\ Calculates\ the\ number\ of\ consecutive\ tiles\ to\ the\ up\ of\ a\ specified\ position\ in\ the\ puzzle\ that\ are\ glued\ together.\r\n\r\n\ @param\ row\ \ \ \ The\ row\ index\ of\ the\ starting\ tile.\r\n\ @param\ column\ The\ column\ index\ of\ the\ starting\ tile.\r\n\ @return\ \ \ \ \ The\ number\ of\ consecutive\ glued\ tiles\ to\ the\ up\ of\ the\ specified\ tile.\r\n
comment14.params=row\ column
comment14.target=int\ gluedGroupLeft(int,\ int)
comment14.text=\r\n\ Calculates\ the\ number\ of\ consecutive\ tiles\ to\ the\ left\ of\ a\ specified\ position\ in\ the\ puzzle\ that\ are\ glued\ together.\r\n\r\n\ @param\ row\ \ \ \ The\ row\ index\ of\ the\ starting\ tile.\r\n\ @param\ column\ The\ column\ index\ of\ the\ starting\ tile.\r\n\ @return\ \ \ \ \ The\ number\ of\ consecutive\ glued\ tiles\ to\ the\ left\ of\ the\ specified\ tile.\r\n
comment15.params=direction
comment15.target=void\ tilt(char)
comment15.text=\r\n\ Tilt\ of\ the\ board\r\n\r\n\ @param\ \ direction\r\n
comment16.params=
comment16.target=void\ tild()
comment16.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment17.params=
comment17.target=void\ exchange()
comment17.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment18.params=
comment18.target=boolean\ isGoald()
comment18.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @return\ \ \ \r\n
comment19.params=
comment19.target=char[][]\ actualArrangement()
comment19.text=\r\n\ Displays\ the\ current\ state\ of\ the\ game\ in\ matrix\ form\r\n\r\n\ @return\r\n
comment2.params=ending
comment2.target=Puzzle(char[][])
comment2.text=\r\n\ Constructor\ 2.\ Create\ a\ puzzle\ with\ the\ given\ final\ configuration\r\n
comment20.params=
comment20.target=void\ makeVisible()
comment20.text=\r\n\ Makes\ the\ game\ visible\r\n\r\n
comment21.params=
comment21.target=void\ makeInvisible()
comment21.text=\r\n\ Makes\ the\ game\ Invisible\r\n\r\n
comment22.params=
comment22.target=void\ finish()
comment22.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n
comment23.params=
comment23.target=boolean\ ok()
comment23.text=\r\n\ The\ last\ action\ could\ be\ performed\r\n\r\n
comment3.params=starting\ ending
comment3.target=Puzzle(char[][],\ char[][])
comment3.text=\r\n\ Constructor\ 3.\ Create\ a\ puzzle\ with\ the\ initial\ and\ final\ configuration\r\n
comment4.params=row\ column\ color
comment4.target=void\ addTile(int,\ int,\ java.lang.String)
comment4.text=\r\n\ Add\ a\ tile\ at\ a\ specific\ position\r\n\ \r\n\ @param\ row\r\n\ @param\ column\r\n\ @param\ color\r\n
comment5.params=row\ column
comment5.target=void\ deleteTile(int,\ int)
comment5.text=\r\n\ Remove\ a\ tile\ from\ a\ specific\ position\r\n\r\n\ @param\ \ \ row\ \r\n\ @param\ \ \ column\r\n
comment6.params=from\ to
comment6.target=void\ relocateTile(int[],\ int[])
comment6.text=\r\n\ Change\ the\ position\ of\ a\ tile\r\n\r\n\ @param\ \ \ row\ \r\n\ @param\ \ \ column\r\n
comment7.params=row\ column
comment7.target=void\ addGlue(int,\ int)
comment7.text=\r\n\ Add\ the\ glue\ from\ the\ specific\ tile\r\n\r\n\ @param\ \ \ \ row\r\n\ @param\ \ \ \ column\r\n
comment8.params=row\ column
comment8.target=void\ deleteGlue(int,\ int)
comment8.text=\r\n\ Delete\ the\ glue\ from\ the\ specific\ tile\r\n\r\n\ @param\ \ \ row\r\n\ @param\ \ \ column\r\n
comment9.params=row\ column
comment9.target=void\ makeHole(int,\ int)
comment9.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
numComments=24
